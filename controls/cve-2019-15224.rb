# copyright: 2019, Chef Software

title "Malicious Gems Filesystem Check"

control "CVE-2019-15224" do
  title "malicious rest-client v1.6.10-13"
  desc "Versions 1.6.10 through 1.6.13 of the rest-client gem contains malicious code and should not be present on the system."
  desc "Action", "This control will find all directories on a host's filesystem and check for the presence of a malicious version of rest-client."
  ref "CVE-2019-15224", url: "https://nvd.nist.gov/vuln/detail/CVE-2019-15224"
  ref "GitHub Issue for CVE-2019-15224", url: "https://github.com/rest-client/rest-client/issues/713"
  tag cve: "CVE-2019-15224"

describe "(find command for malicious rest-client versions)" do
  subject {
    if os.windows?
      powershell('Get-ChildItem C:/ -Filter rest-client* -Recurse -Directory -ErrorAction SilentlyContinue | % { $_.FullName } | select-string -pattern "rest-client-1\.6\.1[0123]"')
    else
      command('find / -type d -regex ".*/rest-client-1\.6\.1[0123]$"')
    end
  }

  its("stdout") { should_not include("rest-client") }
end
end

control "CVE-2019-15224-adjacent" do
  title "Other malicious gems found during investigation."
  desc "Gems detected by this control were found during the investigation into rest-client to also contain malicious code."

  describe "(find command for bad gems)" do
    bad_gems = %w(bitcoin_vanity
                  lita_coin
                  coming-soon
                  omniauth_amazon
                  cron_parser
                  coin_base
                  blockchain_wallet
                  awesome-bot
                  doge-coin
                  capistrano-colors)
    bad_gems_piped = bad_gems.join('|')

    subject {
      if os.windows?
        powershell("Get-ChildItem C:/ -Recurse -Directory -ErrorAction SilentlyContinue | % { $_.FullName } | select-string -pattern '#{bad_gems_piped}'")
      elsif os.bsd? # BSD find uses "-E" to denote an extended regex
        command("find -E / -type d -regex \".*/(#{bad_gems_piped})-.*$\"")
      elsif os.linux? # GNU find uses "-regextype posix-egrep" to denote an extended regex
        command("find / -type d -regextype posix-egrep -regex \".*/(#{bad_gems_piped})-.*$\"")
      end
    }

    bad_gems.each do |bad_gem|
      its('stdout') { should_not include("#{bad_gem}") }
    end
  end
end

